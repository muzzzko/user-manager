// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github/user-manager/internal/generated/server/models"
)

// GetUsersByFiltersOKCode is the HTTP code returned for type GetUsersByFiltersOK
const GetUsersByFiltersOKCode int = 200

/*
GetUsersByFiltersOK Users are filtered by criteria

swagger:response getUsersByFiltersOK
*/
type GetUsersByFiltersOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetUserByFiltersResponse `json:"body,omitempty"`
}

// NewGetUsersByFiltersOK creates GetUsersByFiltersOK with default headers values
func NewGetUsersByFiltersOK() *GetUsersByFiltersOK {

	return &GetUsersByFiltersOK{}
}

// WithPayload adds the payload to the get users by filters o k response
func (o *GetUsersByFiltersOK) WithPayload(payload *models.GetUserByFiltersResponse) *GetUsersByFiltersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by filters o k response
func (o *GetUsersByFiltersOK) SetPayload(payload *models.GetUserByFiltersResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByFiltersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByFiltersUnprocessableEntityCode is the HTTP code returned for type GetUsersByFiltersUnprocessableEntity
const GetUsersByFiltersUnprocessableEntityCode int = 422

/*
GetUsersByFiltersUnprocessableEntity Server couldn't handle request

swagger:response getUsersByFiltersUnprocessableEntity
*/
type GetUsersByFiltersUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByFiltersUnprocessableEntity creates GetUsersByFiltersUnprocessableEntity with default headers values
func NewGetUsersByFiltersUnprocessableEntity() *GetUsersByFiltersUnprocessableEntity {

	return &GetUsersByFiltersUnprocessableEntity{}
}

// WithPayload adds the payload to the get users by filters unprocessable entity response
func (o *GetUsersByFiltersUnprocessableEntity) WithPayload(payload *models.Error) *GetUsersByFiltersUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by filters unprocessable entity response
func (o *GetUsersByFiltersUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByFiltersUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersByFiltersInternalServerErrorCode is the HTTP code returned for type GetUsersByFiltersInternalServerError
const GetUsersByFiltersInternalServerErrorCode int = 500

/*
GetUsersByFiltersInternalServerError Internal server error. Something went wrong

swagger:response getUsersByFiltersInternalServerError
*/
type GetUsersByFiltersInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUsersByFiltersInternalServerError creates GetUsersByFiltersInternalServerError with default headers values
func NewGetUsersByFiltersInternalServerError() *GetUsersByFiltersInternalServerError {

	return &GetUsersByFiltersInternalServerError{}
}

// WithPayload adds the payload to the get users by filters internal server error response
func (o *GetUsersByFiltersInternalServerError) WithPayload(payload *models.Error) *GetUsersByFiltersInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users by filters internal server error response
func (o *GetUsersByFiltersInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersByFiltersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
