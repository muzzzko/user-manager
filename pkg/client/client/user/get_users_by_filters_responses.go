// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github/user-manager/pkg/client/models"
)

// GetUsersByFiltersReader is a Reader for the GetUsersByFilters structure.
type GetUsersByFiltersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersByFiltersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersByFiltersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewGetUsersByFiltersUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUsersByFiltersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsersByFiltersOK creates a GetUsersByFiltersOK with default headers values
func NewGetUsersByFiltersOK() *GetUsersByFiltersOK {
	return &GetUsersByFiltersOK{}
}

/*
GetUsersByFiltersOK describes a response with status code 200, with default header values.

Users are filtered by criteria
*/
type GetUsersByFiltersOK struct {
	Payload *models.GetUserByFiltersResponse
}

// IsSuccess returns true when this get users by filters o k response has a 2xx status code
func (o *GetUsersByFiltersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get users by filters o k response has a 3xx status code
func (o *GetUsersByFiltersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users by filters o k response has a 4xx status code
func (o *GetUsersByFiltersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users by filters o k response has a 5xx status code
func (o *GetUsersByFiltersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get users by filters o k response a status code equal to that given
func (o *GetUsersByFiltersOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUsersByFiltersOK) Error() string {
	return fmt.Sprintf("[GET /users][%d] getUsersByFiltersOK  %+v", 200, o.Payload)
}

func (o *GetUsersByFiltersOK) String() string {
	return fmt.Sprintf("[GET /users][%d] getUsersByFiltersOK  %+v", 200, o.Payload)
}

func (o *GetUsersByFiltersOK) GetPayload() *models.GetUserByFiltersResponse {
	return o.Payload
}

func (o *GetUsersByFiltersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetUserByFiltersResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersByFiltersUnprocessableEntity creates a GetUsersByFiltersUnprocessableEntity with default headers values
func NewGetUsersByFiltersUnprocessableEntity() *GetUsersByFiltersUnprocessableEntity {
	return &GetUsersByFiltersUnprocessableEntity{}
}

/*
GetUsersByFiltersUnprocessableEntity describes a response with status code 422, with default header values.

Server couldn't handle request
*/
type GetUsersByFiltersUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this get users by filters unprocessable entity response has a 2xx status code
func (o *GetUsersByFiltersUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users by filters unprocessable entity response has a 3xx status code
func (o *GetUsersByFiltersUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users by filters unprocessable entity response has a 4xx status code
func (o *GetUsersByFiltersUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get users by filters unprocessable entity response has a 5xx status code
func (o *GetUsersByFiltersUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get users by filters unprocessable entity response a status code equal to that given
func (o *GetUsersByFiltersUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *GetUsersByFiltersUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /users][%d] getUsersByFiltersUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetUsersByFiltersUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /users][%d] getUsersByFiltersUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetUsersByFiltersUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUsersByFiltersUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersByFiltersInternalServerError creates a GetUsersByFiltersInternalServerError with default headers values
func NewGetUsersByFiltersInternalServerError() *GetUsersByFiltersInternalServerError {
	return &GetUsersByFiltersInternalServerError{}
}

/*
GetUsersByFiltersInternalServerError describes a response with status code 500, with default header values.

Internal server error. Something went wrong
*/
type GetUsersByFiltersInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get users by filters internal server error response has a 2xx status code
func (o *GetUsersByFiltersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get users by filters internal server error response has a 3xx status code
func (o *GetUsersByFiltersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get users by filters internal server error response has a 4xx status code
func (o *GetUsersByFiltersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get users by filters internal server error response has a 5xx status code
func (o *GetUsersByFiltersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get users by filters internal server error response a status code equal to that given
func (o *GetUsersByFiltersInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUsersByFiltersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users][%d] getUsersByFiltersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUsersByFiltersInternalServerError) String() string {
	return fmt.Sprintf("[GET /users][%d] getUsersByFiltersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUsersByFiltersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUsersByFiltersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetUsersByFiltersBody get users by filters body
swagger:model GetUsersByFiltersBody
*/
type GetUsersByFiltersBody struct {

	// filters
	// Required: true
	Filters models.Filters `json:"filters"`

	// User count in response
	// Maximum: 20
	// Minimum: 1
	Limit int64 `json:"limit,omitempty"`

	// Value is used for getting next user list. It is returned in response
	Next *string `json:"next,omitempty"`
}

// Validate validates this get users by filters body
func (o *GetUsersByFiltersBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFilters(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLimit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUsersByFiltersBody) validateFilters(formats strfmt.Registry) error {

	if err := o.Filters.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("body" + "." + "filters")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("body" + "." + "filters")
		}
		return err
	}

	return nil
}

func (o *GetUsersByFiltersBody) validateLimit(formats strfmt.Registry) error {
	if swag.IsZero(o.Limit) { // not required
		return nil
	}

	if err := validate.MinimumInt("body"+"."+"limit", "body", o.Limit, 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("body"+"."+"limit", "body", o.Limit, 20, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this get users by filters body based on the context it is used
func (o *GetUsersByFiltersBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateFilters(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUsersByFiltersBody) contextValidateFilters(ctx context.Context, formats strfmt.Registry) error {

	if err := o.Filters.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("body" + "." + "filters")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("body" + "." + "filters")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUsersByFiltersBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUsersByFiltersBody) UnmarshalBinary(b []byte) error {
	var res GetUsersByFiltersBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
